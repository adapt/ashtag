// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    _this = this;

  module("ashtag.panes");

  ashtag.panes.SubmitSightingPane = (function(_super) {
    __extends(SubmitSightingPane, _super);

    function SubmitSightingPane() {
      this.handleSubmit = __bind(this.handleSubmit, this);
      _ref = SubmitSightingPane.__super__.constructor.apply(this, arguments);
      return _ref;
    }

    SubmitSightingPane.prototype.initialise = function() {
      this.mapPane = new ashtag.panes.SubmitSightingMapPane(this.$el);
      this.$form = this.$('form');
      this.$imageField = this.$('form #id_image');
      return this.fileStore = new ashtag.FileStore();
    };

    SubmitSightingPane.prototype.setupEvents = function() {
      return this.$form.on('submit', this.handleSubmit);
    };

    SubmitSightingPane.prototype.start = function() {};

    SubmitSightingPane.prototype.handleSubmit = function(e) {
      var file, meta;
      e.preventDefault();
      meta = this.$form.serialize();
      file = this.$imageField.get(0).files[0];
      return this.fileStore.storeFile(file, meta);
    };

    return SubmitSightingPane;

  })(ashtag.lib.panes.BasePane);

  $(window).on('pagechange', function(event, obj) {
    if (obj.toPage.attr('id') === 'submit-sighting-page') {
      return new ashtag.panes.SubmitSightingPane(obj.toPage);
    }
  });

}).call(this);
