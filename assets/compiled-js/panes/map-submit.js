// Generated by CoffeeScript 1.7.1
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module("ashtag.panes");

  ashtag.panes.SubmitSightingMapPane = (function(_super) {
    __extends(SubmitSightingMapPane, _super);

    function SubmitSightingMapPane() {
      this.handleMapLoad = __bind(this.handleMapLoad, this);
      this.handleMapClick = __bind(this.handleMapClick, this);
      this.handleDragEnd = __bind(this.handleDragEnd, this);
      this.createMarker = __bind(this.createMarker, this);
      return SubmitSightingMapPane.__super__.constructor.apply(this, arguments);
    }

    SubmitSightingMapPane.prototype.initialise = function() {
      SubmitSightingMapPane.__super__.initialise.apply(this, arguments);
      if (this.spec.lat && this.spec.lng) {
        this.defaultLat = this.spec.lat;
        this.defaultLng = this.spec.lng;
        return this.defaultZoom = 19;
      } else {
        this.doLocateUser = true;
        return this.zoomedInZoomLevel = 19;
      }
    };

    SubmitSightingMapPane.prototype.createMarker = function(lat, lng) {
      if (!this.marker) {
        this.marker = new google.maps.Marker({
          position: new google.maps.LatLng(lat, lng),
          draggable: true,
          bounds: false,
          map: this.map
        });
      } else {
        this.marker.setPosition(new google.maps.LatLng(lat, lng));
      }
      google.maps.event.addDomListener(this.marker, 'dragend', this.handleDragEnd);
      return this.locationChange(lat, lng);
    };

    SubmitSightingMapPane.prototype.handleDragEnd = function(e) {
      return this.locationChange(e.latLng.lat(), e.latLng.lng());
    };

    SubmitSightingMapPane.prototype.handleMapClick = function(e) {
      this.createMarker(e.latLng.lat(), e.latLng.lng());
      return this.locationChange(e.latLng.lat(), e.latLng.lng());
    };

    SubmitSightingMapPane.prototype.locationChange = function(lat, lng) {
      return this.fire('locationChange', lat, lng);
    };

    SubmitSightingMapPane.prototype.handleMapLoad = function() {
      SubmitSightingMapPane.__super__.handleMapLoad.apply(this, arguments);
      google.maps.event.addDomListener(this.map, 'click', this.handleMapClick);
      if (this.doLocateUser) {
        return this.centerOnUser().then(this.createMarker, (function(_this) {
          return function() {
            return _this.createMarker(_this.defaultLat, _this.defaultLng);
          };
        })(this));
      } else {
        return this.createMarker(this.defaultLat, this.defaultLng);
      }
    };

    return SubmitSightingMapPane;

  })(ashtag.panes.MapBasePane);

}).call(this);
